/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.catolicasc.foodtruck;

import com.catolicasc.foodtruck.models.Customers;
import com.catolicasc.foodtruck.repositories.CustomersRepository;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author gustavo.rodrigues
 */
public class ListCustomers extends javax.swing.JInternalFrame {

    private CustomersRepository customersRepository = new CustomersRepository();

    /**
     * Creates new form ListUsers
     */
    public ListCustomers() {
        initComponents();
    }

    public void refreshCustomerList() {
        DefaultTableModel tableModel = (DefaultTableModel) jtCustomers.getModel();
        tableModel.setRowCount(0);

        ArrayList<Customers> customers = customersRepository.getAllCustomers();

        for (Customers customer : customers) {
            tableModel.addRow(
                    new Object[] { customer.getId(), customer.getName(), customer.getEmail(), customer.getAddress() });
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */

    // <editor-fold defaultstate="collapsed" desc="Generated
    // Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jInternalFrame1 = new javax.swing.JInternalFrame();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtCustomers = new javax.swing.JTable();
        jbRefresh = new javax.swing.JButton();
        jbAdd = new javax.swing.JButton();
        jbUpdate = new javax.swing.JButton();
        jbDelete = new javax.swing.JButton();

        jInternalFrame1.setClosable(true);
        jInternalFrame1.setMaximizable(true);
        jInternalFrame1.setResizable(true);
        jInternalFrame1.setVisible(true);

        jtCustomers
                .setModel(new javax.swing.table.DefaultTableModel(
                        new Object[][] { { null, null, null, null }, { null, null, null, null },
                                { null, null, null, null }, { null, null, null, null } },
                        new String[] { "Código", "Nome", "E-mail", "Endereço" }) {
                    boolean[] canEdit = new boolean[] { false, false, false, false };

                    public boolean isCellEditable(int rowIndex, int columnIndex) {
                        return canEdit[columnIndex];
                    }
                });
        jtCustomers.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jtCustomers);
        if (jtCustomers.getColumnModel().getColumnCount() > 0) {
            jtCustomers.getColumnModel().getColumn(0).setResizable(false);
            jtCustomers.getColumnModel().getColumn(1).setResizable(false);
            jtCustomers.getColumnModel().getColumn(2).setResizable(false);
            jtCustomers.getColumnModel().getColumn(3).setResizable(false);
        }

        jbRefresh.setText("Atualizar");
        jbRefresh.setToolTipText("");
        jbRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbRefreshActionPerformed(evt);
            }
        });

        jbAdd.setText("Adicionar");
        jbAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAddActionPerformed(evt);
            }
        });

        jbUpdate.setText("Alterar");
        jbUpdate.setToolTipText("");
        jbUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbUpdateActionPerformed(evt);
            }
        });

        jbDelete.setText("Apagar");
        jbDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(jInternalFrame1Layout
                .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jInternalFrame1Layout.createSequentialGroup().addContainerGap()
                        .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 598, Short.MAX_VALUE)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
                                        jInternalFrame1Layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE)
                                                .addComponent(jbDelete)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jbUpdate)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jbAdd).addGap(3, 3, 3).addComponent(jbRefresh)))
                        .addContainerGap()));
        jInternalFrame1Layout.setVerticalGroup(jInternalFrame1Layout
                .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jInternalFrame1Layout.createSequentialGroup().addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 350,
                                javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jbDelete).addComponent(jbUpdate).addComponent(jbAdd)
                                .addComponent(jbRefresh))
                        .addContainerGap(55, Short.MAX_VALUE)));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jInternalFrame1));
        layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                        .addComponent(jInternalFrame1, javax.swing.GroupLayout.PREFERRED_SIZE,
                                javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)));
    }// </editor-fold>//GEN-END:initComponents

    private void jbDeleteActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jbDeleteActionPerformed
        if (jtCustomers.getSelectedRowCount() == 0) {
            JOptionPane.showMessageDialog(null, "Adicionar");
            return;
        } else {

            Integer rowIndex = jtCustomers.getSelectedRow();
            customersRepository.deleteCustomer((Customers) jtCustomers.getModel().getValueAt(rowIndex, 0));
        }
    }// GEN-LAST:event_jbDeleteActionPerformed

    private void jbUpdateActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jbUpdateActionPerformed
        if (jtCustomers.getSelectedRowCount() == 0) {
            JOptionPane.showMessageDialog(null, "Selecione um usuário");
            return;
        }

        Integer rowIndex = jtCustomers.getSelectedRow();
        Integer customerId = (Integer) jtCustomers.getModel().getValueAt(rowIndex, 0);

        Customers customer = customersRepository.getCustomerById(customerId);

        AddEditCustomer addEditCustomer = new AddEditCustomer();
        addEditCustomer.setCustomer(customer);
        this.getParent().add(addEditCustomer);
        addEditCustomer.setVisible(true);
    }// GEN-LAST:event_jbUpdateActionPerformed

    private void jbAddActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jbAddActionPerformed
        AddEditCustomer addEditCustomer = new AddEditCustomer();
        this.getParent().add(addEditCustomer);
        addEditCustomer.setVisible(true);
    }// GEN-LAST:event_jbAddActionPerformed

    private void jbRefreshActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jbRefreshActionPerformed
        refreshCustomerList();
    }// GEN-LAST:event_jbRefreshActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbAdd;
    private javax.swing.JButton jbDelete;
    private javax.swing.JButton jbRefresh;
    private javax.swing.JButton jbUpdate;
    private javax.swing.JTable jtCustomers;
    // End of variables declaration//GEN-END:variables
}
